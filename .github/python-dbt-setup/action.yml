name: 'Python-DBT Setup'

inputs:
  aws-role:
    required: true
    type: string

runs:
  using: "composite"
  steps:
      - name: Generate unique timestamp
        run: echo "PIPELINE_TIMESTAMP=$(date +'%Y-%m-%dT%H:%M:%S%z')" >> $GITHUB_ENV
        shell: bash
      - name: Set DBT profiles folder
        run: echo "DBT_PROFILES_DIR=${{ github.workspace }}/.dbt" >> $GITHUB_ENV
        shell: bash
      - name: Create output folder
        run: mkdir -p output
        shell: bash
      - name: Create catalog folder
        run: mkdir -p catalog
        shell: bash
      - name: Install Pipenv
        run: |
          python -m pip install --upgrade pip
          pip install pipenv
        shell: bash
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: '.python-version'
          cache: pipenv
          cache-dependency-path: Pipfile.lock
          
      - name: Install dependencies
        run: pipenv install
        shell: bash

      - name: Cache DBT Packages
        uses: actions/cache@v3
        with:
          path: dbt_packages
          key: dbt-${{ hashFiles('**/packages.yml') }}

      - name: Install DBT Dependencies
        run: pipenv run dbt deps
        shell: bash

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1
          role-duration-seconds: 3600

      - name: Set up MotherDuck
        run: echo "MOTHERDUCK_TOKEN=${{ secrets.MOTHERDUCK_TOKEN }}" >> $GITHUB_ENV
        shell: bash
